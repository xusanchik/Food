// <auto-generated />
using System;
using Food.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Food.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231017155427_inir")]
    partial class inir
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Food.Models.Foods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Imgurl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("MenuId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("OrdersId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotilCount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("OrdersId");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("Food.Models.Functions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("InformationId")
                        .HasColumnType("integer");

                    b.Property<int?>("lenguageid")
                        .HasColumnType("integer");

                    b.Property<int?>("orderHistoryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InformationId");

                    b.HasIndex("lenguageid");

                    b.HasIndex("orderHistoryId");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("Food.Models.Informations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Locasion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Informations");
                });

            modelBuilder.Entity("Food.Models.Lenguage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("lenguages");
                });

            modelBuilder.Entity("Food.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("functionsId")
                        .HasColumnType("integer");

                    b.Property<int?>("profilId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("functionsId");

                    b.HasIndex("profilId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Food.Models.OrderHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("OrderHistorie");
                });

            modelBuilder.Entity("Food.Models.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Food.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CardNumber")
                        .HasColumnType("integer");

                    b.Property<string>("Cvv")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TableNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("Food.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("profiles");
                });

            modelBuilder.Entity("Food.Models.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("registrations");
                });

            modelBuilder.Entity("Food.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int?>("RegistrationId")
                        .HasColumnType("integer");

                    b.Property<int?>("menuId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationId");

                    b.HasIndex("menuId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Food.Models.Foods", b =>
                {
                    b.HasOne("Food.Models.Menu", null)
                        .WithMany("foods")
                        .HasForeignKey("MenuId");

                    b.HasOne("Food.Models.Orders", null)
                        .WithMany("foods")
                        .HasForeignKey("OrdersId");
                });

            modelBuilder.Entity("Food.Models.Functions", b =>
                {
                    b.HasOne("Food.Models.Informations", "Information")
                        .WithMany()
                        .HasForeignKey("InformationId");

                    b.HasOne("Food.Models.Lenguage", "lenguage")
                        .WithMany()
                        .HasForeignKey("lenguageid");

                    b.HasOne("Food.Models.OrderHistory", "orderHistory")
                        .WithMany()
                        .HasForeignKey("orderHistoryId");

                    b.Navigation("Information");

                    b.Navigation("lenguage");

                    b.Navigation("orderHistory");
                });

            modelBuilder.Entity("Food.Models.Menu", b =>
                {
                    b.HasOne("Food.Models.Functions", "functions")
                        .WithMany()
                        .HasForeignKey("functionsId");

                    b.HasOne("Food.Models.Profile", "profil")
                        .WithMany()
                        .HasForeignKey("profilId");

                    b.Navigation("functions");

                    b.Navigation("profil");
                });

            modelBuilder.Entity("Food.Models.User", b =>
                {
                    b.HasOne("Food.Models.Registration", "Registration")
                        .WithMany()
                        .HasForeignKey("RegistrationId");

                    b.HasOne("Food.Models.Menu", "menu")
                        .WithMany()
                        .HasForeignKey("menuId");

                    b.Navigation("Registration");

                    b.Navigation("menu");
                });

            modelBuilder.Entity("Food.Models.Menu", b =>
                {
                    b.Navigation("foods");
                });

            modelBuilder.Entity("Food.Models.Orders", b =>
                {
                    b.Navigation("foods");
                });
#pragma warning restore 612, 618
        }
    }
}
